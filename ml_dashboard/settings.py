"""
Django settings for ml_dashboard project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from elasticsearch import Elasticsearch
import environ
import json
import os
env = environ.Env()

if os.environ.get('ENV') == 'prod':
    environ.Env.read_env('prod.env')
elif os.environ.get('ENV') == 'stage':
    environ.Env.read_env('stage.env')
else:
    environ.Env.read_env('.env')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False if env('ENV') == 'prod' else True

ALLOWED_HOSTS = json.loads(env('ALLOWED_HOSTS'))

ES = Elasticsearch(env('ELASTICSEARCH_HOST'))
ES_INDEX = env('ELASTICSEARCH_INDEX')
DEFAULT_SIZE = env('DEFAULT_SIZE')
REDIS_PORT = env('REDIS_PORT')
PRODIGY_PORT_START = env('PRODIGY_PORT_START')

# Application definition

INSTALLED_APPS = [
    'django_celery_results',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'collection',
    'labeling.apps.LabelingConfig',
    'models',
    'recommendation',
    'topics',
    'tasks.apps.TasksConfig',
    'revproxy',
    'rest_framework',
    'rest_framework_datatables',
    'django_celery_beat',
    'django_extensions',
    'taggit'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ml_dashboard.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "ml_dashboard/templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ml_dashboard.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {},
    'ml': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('ML_NAME'),
        'USER': env('ML_USER'),
        'PASSWORD': env('ML_PASSWORD'),
        'HOST': env('ML_HOST'),
        'PORT': env('ML_PORT'),
        'TEST': {
            'DEPENDENCIES': ['food']
        }
    },
    'food': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('FOOD_NAME'),
        'USER': env('FOOD_USER'),
        'PASSWORD': env('FOOD_PASSWORD'),
        'HOST': env('FOOD_HOST'),
        'PORT': env('FOOD_PORT'),
        'TEST': {
            'DEPENDENCIES': []
        }
    }
}

DATABASE_ROUTERS = ['routers.db_routers.MLRouter', 'routers.db_routers.FoodRouter']
CONN_MAX_AGE = 3600

CELERY_RESULT_BACKEND_DB = 'db+sqlite:///db.sqlite3'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_BEAT_SCHEDULER = 'routers.db_routers.MLDatabaseScheduler'

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    # os.path.join(BASE_DIR, 'static')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SESSION_URL_BASE = env('SESSION_URL_BASE', default='') or '/prodigy/'
SOURCE_DIR = 'data/source'
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework_datatables.renderers.DatatablesRenderer',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_datatables.filters.DatatablesFilterBackend',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework_datatables.pagination.DatatablesPageNumberPagination',
    'PAGE_SIZE': 10,
}

MODEL_DIR = 'data/models/'
TRAIN_TIMEOUT = 100
PREDICTION_TIMEOUT = 300
X_FRAME_OPTIONS = 'SAMEORIGIN'

TEST_MODEL_DIR = 'data/tests/models'
TEST_SOURCE_DIR = 'data/tests/source'

SERVICE_ACCOUNT_PATH = env('SERVICE_ACCOUNT_PATH')
MONGO_URI = env('MONGO_URI')

import sys
if 'test' in sys.argv:
    DATABASES['ml'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'ml_test.db',
        'TEST': {
            'DEPENDENCIES': ['food']
        }
    }

    DATABASES['food'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'food_test.db',
        'TEST': {
            'DEPENDENCIES': []
        }
    }
